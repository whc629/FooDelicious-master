# url
# server.servlet.context-path=/myapp

# port
server.port=8080

# jsp(let tiles do the integration so we dont need this jsp setting anymore)
#spring.mvc.view.prefix=/WEB-INF
#spring.mvc.view.suffix=.jsp

# MVC
# spring.freemarker.template-loader-path=classpath:/templates/,classpath:/templates/member/,classpath:/templates/mainPage/,classpath:/templates/article/
# spring.freemarker.suffix=.html


# Hibernate
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://sql.t-cyber.com;databaseName=FooDelicious
spring.datasource.username=foouser
spring.datasource.password=foo@2021
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=FooDelicious
#spring.datasource.username=sa
#spring.datasource.password=passw0rd!

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Table
#auto usually bug
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.legacy_limit_handler=true

# (Spring Boot < 2.2 always registers the filter, for Spring Boot 2.2 or higher you need to set the property)
spring.mvc.hiddenmethod.filter.enabled=true

#mail setting
spring.mail.host = smtp.gmail.com
spring.mail.username = FooDelicious.eeit13702
spring.mail.password = ee!t13702
send.from.email= FooDelicious.eeit13702
spring.mail.properties.mail.smtp.auth = true;
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.ssl.enable = true
spring.mail.properties.mail.socketFactory.port=587
spring.mail.properties.mail.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.socketFactory.fallback=false
spring.mail.smtp.port= 587
